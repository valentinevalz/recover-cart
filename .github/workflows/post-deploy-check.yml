# ======================================================
# ü©∫ Post-Deploy Health Check + üß† AI Cron Jobs + Alerts
# ======================================================

name: RecoverCart Health & Intelligence Jobs

on:
  workflow_dispatch:
  deployment_status:
    types: [success]
  schedule:
    # ‚è∞ Daily Product Intelligence refresh (09:00 UTC)
    - cron: '0 9 * * *'
    # üß† Weekly AI warmup (Every Monday 10:00 UTC)
    - cron: '0 10 * * 1'

jobs:
  # ======================================================
  # ü©∫ 1. Post-Deploy Health Check
  # ======================================================
  healthcheck:
    name: üîç Post-Deploy Health Check
    runs-on: ubuntu-latest
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'
    env:
      SITE_URL: ${{ secrets.SITE_URL }}
    steps:
      - name: üîç Check main page
        run: |
          echo "Checking main site..."
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${SITE_URL}")
          if [ "$STATUS" != "200" ]; then
            echo "‚ùå Main site failed with status $STATUS"
            exit 1
          fi

      - name: üîç Check Cart-Copilot route
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${SITE_URL}/dashboard/cart-copilot")
          if [ "$STATUS" != "200" ]; then
            echo "‚ùå Cart-Copilot route failed with status $STATUS"
            exit 1
          fi

      - name: üîç Check Shopify API endpoint
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${SITE_URL}/api/shopify/products")
          if [ "$STATUS" != "200" ]; then
            echo "‚ùå Shopify API failed with status $STATUS"
            exit 1
          fi

      - name: ‚úÖ Success message
        if: ${{ success() }}
        run: echo "‚úÖ All health checks passed successfully."

      - name: üö® Send failure alert (email)
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "üö® RecoverCart: Health Check Failed!"
          to: ${{ secrets.ALERT_EMAIL }}
          from: "RecoverCart Monitor"
          body: "One or more health checks failed on https://recovercart.netlify.app. Please investigate the issue."

  # ======================================================
  # ‚è∞ 2. Daily Product Intelligence Cron
  # ======================================================
  daily-cron:
    name: ‚è∞ Daily Product Intelligence Cron
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    env:
      PROD_URL: ${{ secrets.PROD_URL }}
    steps:
      - name: Ping Product Intelligence cron endpoint
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${PROD_URL}/api/cron")
          if [ "$STATUS" != "200" ]; then
            echo "‚ùå Daily cron failed with status $STATUS"
            exit 1
          fi
          echo "‚úÖ Daily cron executed successfully."

      - name: üö® Send alert if cron fails
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "‚ö†Ô∏è RecoverCart Daily Cron Failed"
          to: ${{ secrets.ALERT_EMAIL }}
          from: "RecoverCart AI Cron"
          body: "The daily Product Intelligence cron job failed to run successfully."

  # ======================================================
  # üß† 3. Weekly AI Intelligence Warmup
  # ======================================================
  weekly-ai-warmup:
    name: üß† Weekly AI Intelligence Warmup
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    env:
      PROD_URL: ${{ secrets.PROD_URL }}
    steps:
      - name: Call Product Intelligence AI endpoint
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "${PROD_URL}/api/ai/product-intelligence")
          if [ "$STATUS" != "200" ]; then
            echo "‚ùå AI Warmup failed with status $STATUS"
            exit 1
          fi
          echo "‚úÖ Weekly AI warmup successful."

      - name: üö® Send alert if AI warmup fails
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "ü§ñ RecoverCart AI Warmup Failed"
          to: ${{ secrets.ALERT_EMAIL }}
          from: "RecoverCart AI Monitor"
          body: "The weekly AI warmup endpoint returned an error or failed to respond."
